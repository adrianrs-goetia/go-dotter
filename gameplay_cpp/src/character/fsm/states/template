#pragma once

#include "../typedefs.hpp"
#include "_utils.hpp"
#include <configHandler.h>
#include <debugdraw3d/api.h>
#include <managers/inputManager.h>

#ifdef CONFIG_PREFIX
#undef CONFIG_PREFIX
#endif
#define CONFIG_PREFIX "player", "..."

namespace fsm::player {

class StateName : public BaseState {
public:
	TState getType() const override {
		return TStateType();
	}

	bool canEnter() const override {
		return true;
	}

	TState enter(Context& context) override {
		return {};
	}

	TState exit(Context& context) override {
		return {};
	}

	TState process(Context& context, float delta) override {
		return {};
	}

	TState physicsProcess(Context& context, float delta) override {
		return {};
	}

	TState integrateForces(Context& context, godot::PhysicsDirectBodyState3D* state) override {
		return {};
	}

	TState handleInput(Context& context, float delta) override {
		return {};
	}
};

} //namespace fsm::player

#undef CONFIG_PREFIX
