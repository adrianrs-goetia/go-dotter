#pragma once

#include "../typedefs.hpp"
#include "_utils.hpp"
#include <debugdraw3d/api.h>
#include <managers/inputManager.h>
#include <configparams.hpp>

namespace fsm::player {

class StateName : public BaseState {
	ConfigParam::Player::type ...;

public:
	TState getType() const override {
		return TStateType();
	}

	bool canEnter() const override {
		return true;
	}

	TState enter(Context& context) override {
		return {};
	}

	TState exit(Context& context) override {
		return {};
	}

	TState integrateForces(Context& context, godot::PhysicsDirectBodyState3D* state) override {
		return {};
	}

	TState handleInput(Context& context, float delta) override {
		return {};
	}
};

} //namespace fsm::player
