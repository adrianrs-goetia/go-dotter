diff --git a/SConstruct b/SConstruct
index c7e1f8e..494db57 100644
--- a/SConstruct
+++ b/SConstruct
@@ -127,29 +127,7 @@ def generate_sources_for_resources(env, src_out):
     print("The generation of C++ sources with the contents of resources has been completed")
     print()
 
-
-def apply_patches(target, source, env: SConsEnvironment):
-    return lib_utils_external.apply_git_patches(env, patches_to_apply, "godot-cpp")
-
-
-def get_android_toolchain() -> str:
-    sys.path.insert(0, "godot-cpp/tools")
-    import android
-
-    sys.path.pop(0)
-    return os.path.join(android.get_android_ndk_root(env), "build/cmake/android.toolchain.cmake")
-
-
-# Additional build of the projects via CMake
-# def build_cmake(target, source, env: SConsEnvironment):
-#    extra_flags = []
-#    if env["platform"] in ["macos", "ios"]:
-#        extra_flags += ["-DCMAKE_OSX_ARCHITECTURES=arm64;x86_64", "-DCMAKE_OSX_DEPLOYMENT_TARGET=10.14"]
-#    if env["platform"] in ["android"]:
-#        extra_flags += [f"-DCMAKE_TOOLCHAIN_FILE={get_android_toolchain()}"]
-#    return lib_utils_external.cmake_build_project(env, "project", extra_flags)
-
-env: SConsEnvironment = SConscript("godot-cpp/SConstruct")
+env: SConsEnvironment = SConscript("../godot-cpp/SConstruct")
 env = env.Clone()
 
 args = ARGUMENTS
@@ -165,7 +143,3 @@ if "release" in env["target"] and env["force_enabled_dd3d"]:
 lib_utils.get_library_object(
     env, project_name, lib_name, extra_tags, env["addon_output_dir"], src_folder, additional_src
 )
-
-# Register console commands
-env.Command("apply_patches", [], apply_patches)
-# env.Command("build_cmake", [], build_cmake)
diff --git a/lib_utils.py b/lib_utils.py
index 7b65e53..85233d8 100644
--- a/lib_utils.py
+++ b/lib_utils.py
@@ -14,7 +14,7 @@ def get_sources(src: list, src_folder: str, lib_name: str = "unity_"):
 
 
 def get_library_object(env: SConsEnvironment, project_name: str, lib_name: str, extra_tags: str, output_path: str, src_folder: str, additional_src: list) -> str:
-    env.Append(CPPPATH=src_folder)
+    env.Append(CPPPATH=[src_folder, 'include'])
 
     src = []
     with open(src_folder + "/default_sources.json") as f:
